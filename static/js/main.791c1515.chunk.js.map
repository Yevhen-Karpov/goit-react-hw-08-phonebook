{"version":3,"sources":["redux/auth/auth-operations.js","components/HeaderMenu/Navigation/Navigation.module.css","services/contactsFetch-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducers.js","components/HeaderMenu/UserMenu/UserMenu.module.css","redux/contacts/contacts-actions.js","components/App/App.module.css","components/HeaderMenu/AppBar/AppBar.module.css","redux/auth/auth-slice.js","redux/store.js","redux/auth/auth-selectors.js","components/HeaderMenu/Navigation/Navigation.jsx","components/HeaderMenu/UserMenu/UserMenu.jsx","components/HeaderMenu/AuthNav/AuthNav.jsx","components/HeaderMenu/AppBar/AppBar.jsx","components/HeaderMenu/PrivateRoute.js","components/HeaderMenu/PublicRouter.js","components/App/App.jsx","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","logIn","logOut","refreshCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","authOperations","module","exports","fetchContacts","console","log","fetchAddContact","payload","fetchDeleteContact","value","delete","response","getALLContacts","contactsApi","message","addContact","deleteContact","id","dispatch","fulfilled","contactsOperations","contacts","createReducer","_state","action","filter","actions","changeFilter","combineReducers","createAction","deleteContactRequest","deleteContactSuccess","deleteContactError","authSlice","createSlice","name","initialState","user","email","isLoggedIn","extraReducers","_action","contactsReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whiteList","store","configureStore","reducer","persistReducer","authReduser","users","devTools","process","persistor","persistStore","authSelectors","getIsLoggedIn","getUserName","Navigation","useSelector","exact","to","className","s","link","activeClassName","activeLink","UserMenu","useDispatch","container","type","onClick","AuthNav","styles","display","textDecoration","padding","fontWeight","color","style","activeStyle","Appbar","header","PrivateRoute","children","redirectTo","routeProps","PublicRouter","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.791c1515.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {}\r\n});\r\n\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {}\r\n});\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async credentials => {\r\n  try {\r\n    await axios.post('/users/logout', credentials);\r\n    token.unset();\r\n  } catch (error) {}\r\n});\r\n\r\nconst refreshCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n    try {\r\n      token.set(persistedToken);\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {}\r\n  },\r\n);\r\n\r\nconst authOperations = { register, logIn, logOut, refreshCurrentUser };\r\nexport default authOperations;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__3_GK0\",\"activeLink\":\"Navigation_activeLink__3Bz1_ Navigation_link__3_GK0\"};","import axios from 'axios';\r\n\r\n// axios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get('/contacts');\r\n  console.log(data);\r\n  return data;\r\n}\r\nexport async function fetchAddContact(payload) {\r\n  const { data } = await axios.post('/contacts', payload);\r\n  console.log(data);\r\n  return data;\r\n}\r\nexport async function fetchDeleteContact(value) {\r\n  const response = await axios.delete(`/contacts/${value}`);\r\n  console.log(response);\r\n  return response.data;\r\n}\r\n// export async function fetchContacts() {\r\n//   const { data } = await axios.get('/contacts');\r\n\r\n//   return data;\r\n// }\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as contactsApi from '../../services/contactsFetch-api';\r\n// import { useDispatch } from 'react-redux';\r\n// import axios from 'axios';\r\n\r\n// axios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n// const dispatch = useDispatch();\r\n\r\nconst getALLContacts = createAsyncThunk(\r\n  'contacts/getALLContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      return await contactsApi.fetchContacts();\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst addContact = createAsyncThunk(\r\n  'contacts/addContacts',\r\n  async (payload, { rejectWithValue }) => {\r\n    try {\r\n      return await contactsApi.fetchAddContact(payload);\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue, dispatch }) => {\r\n    try {\r\n      await contactsApi.fetchDeleteContact(id);\r\n      dispatch(deleteContact.fulfilled(id));\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst contactsOperations = { getALLContacts, addContact, deleteContact };\r\n\r\nexport default contactsOperations;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\nimport contactsOperations from './contacts-operations';\r\n\r\nconst { getALLContacts, addContact, deleteContact } = contactsOperations;\r\n\r\nconst contacts = createReducer([], {\r\n  [getALLContacts.fulfilled]: (_state, action) => action.payload,\r\n  [addContact.fulfilled]: (state, action) => [...state, action.payload],\r\n  [deleteContact.fulfilled]: (state, action) => {\r\n    console.log(action);\r\n    state.filter(({ id }) => id !== action.payload);\r\n  },\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__2jcAm\",\"name\":\"UserMenu_name__2Qatr\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst actions = {\r\n  changeFilter,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n};\r\n\r\nexport default actions;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__22SWw\",\"header\":\"App_header__19sGx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3DxuR\"};","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: {\r\n    name: null,\r\n    email: null,\r\n  },\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state, _action) {\r\n      state.user = {\r\n        name: null,\r\n        email: null,\r\n      };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.refreshCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n    },\r\n  },\r\n});\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducers from './contacts/contacts-reducers';\r\nimport authReduser from '../redux/auth/auth-slice';\r\nconsole.log(contactsReducers);\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whiteList: ['token'],\r\n};\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReduser),\r\n    users: contactsReducers,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nconst getUserName = state => state.auth.user.name;\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUserName,\r\n};\r\nexport default authSelectors;\r\n","import { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport s from './Navigation.module.css';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <nav>\r\n      <NavLink exact to=\"/\" className={s.link} activeClassName={s.activeLink}>\r\n        Home\r\n      </NavLink>\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          className={s.link}\r\n          activeClassName={s.activeLink}\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport authSelectors from '../../../redux/auth/auth-selectors';\r\nimport authOperations from '../../../redux/auth/auth-operations';\r\nimport s from './UserMenu.module.css';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <span className={s.name}>Welcome, {name}</span>\r\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default function AuthNav() {\r\n  const styles = {\r\n    link: {\r\n      display: 'inline-block',\r\n      textDecoration: 'none',\r\n      padding: 12,\r\n      fontWeight: 700,\r\n      color: '#2A363B',\r\n    },\r\n    activeLink: {\r\n      color: '#E84A5F',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Register\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport authSelectors from '../../../redux/auth/auth-selectors';\r\nimport s from './AppBar.module.css';\r\n\r\nexport default function Appbar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  console.log(isLoggedIn);\r\n  return (\r\n    <header className={s.header}>\r\n      <Navigation />\r\n      {/* <AuthNav /> */}\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nexport default function PublicRouter({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import { useEffect, Suspense, lazy } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport Appbar from '../HeaderMenu/AppBar/AppBar';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport s from './App.module.css';\r\nimport PrivateRoute from 'components/HeaderMenu/PrivateRoute';\r\nimport PublicRouter from 'components/HeaderMenu/PublicRouter';\r\n\r\nconst HomeView = lazy(() => import('views/HomeView'));\r\nconst RegisterView = lazy(() => import('views/RegisterView'));\r\nconst LoginView = lazy(() => import('views/LoginView'));\r\nconst ContactsView = lazy(() => import('views/ContactsView'));\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(authOperations.refreshCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={s.header}>\r\n      <Appbar />\r\n      <Switch>\r\n        <Suspense fallback={<p>Loading...</p>}>\r\n          <PublicRouter exact path=\"/\">\r\n            <HomeView />\r\n          </PublicRouter>\r\n\r\n          <PublicRouter exact path=\"/register\" restricted>\r\n            <RegisterView />\r\n          </PublicRouter>\r\n\r\n          <PublicRouter exact path=\"/login\" redirectTo=\"/contacts\" restricted>\r\n            <LoginView />\r\n          </PublicRouter>\r\n\r\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n            <ContactsView />\r\n          </PrivateRoute>\r\n        </Suspense>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\nimport App from './components/App/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}